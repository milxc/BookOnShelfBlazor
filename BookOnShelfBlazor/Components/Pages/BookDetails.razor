@page "/BookDetails/{BookId:int}"

@using Microsoft.EntityFrameworkCore
@using BookOnShelfBlazor.Data
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.AspNetCore.Identity
@using BookOnShelfBlazor.Data.Models
@inject ApplicationDbContext Context

@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3 class="text-center">Book Details</h3>

<div class="container">
    @if (Book != null)
    {
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="image-container">
                            @if (ShowFrontImage)
                            {
                                <img src="@(GetImageSource(Book.FrontCover))" class="front-cover" alt="Front Cover" />
                            }
                            else
                            {
                                <img src="@(GetImageSource(Book.BackCover))" class="back-cover" alt="Back Cover" />
                            }
                            <hr />
                            <button class="toggle-picture-button" @onclick="ToggleImage"><i class="bi bi-arrow-left-right"></i></button>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="row">
                            <div class="col-md-12">
                                <h1 class="text-center">@Book.Title</h1>
                                <hr />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10 description-container">
                                <div class="vr"></div>
                                <p class="description">@Book.Description</p>
                            </div>
                            <div class="col-md-2">
                                <div class="vr"></div>
                                @if (Book.AmountOfPages != null)
                                {
                                    <p style="position: absolute; top: 0;">Amount of Pages: <br /> @Book.AmountOfPages</p>
                                }
                                else
                                {
                                    <p style="position:absolute; top:0;">Amount of Pages: <br /> No Data Available</p>
                                }
                                <hr style="position: absolute; top: 37px; width: 132px ">
                                @if (Book.GenreId != null)
                                {
                                    <p style="position: absolute; top: 60px;">Genre: <br /> @Book.GenreId.GenreName</p>
                                }
                                else
                                {
                                    <p style="position: absolute; top: 65px;">Genre: <br /> No Data Available</p>
                                }
                                <hr style="position: absolute; top: 100px; width: 132px ">
                                @if (Book.LanguageId != null)
                                {
                                    <p style="position: absolute; top: 120px;">Language: <br /> @Book.LanguageId.LanguageName</p>
                                }
                                else
                                {
                                    <p style="position: absolute; top: 120px;">Language: <br /> No Data Available</p>
                                }
                                <hr style="position: absolute; top: 160px; width: 132px ">
                            </div>
                        </div>
                    </div>
                </div>
                <hr style="position: absolute; top: 264px; width: 61.9%; margin-top: 20px; margin-left:315px;">
            </div>
        </div>
    }
    else
    {
        <p class="text-center">Book not found.</p>
    }
</div>

@code {
    [Parameter]
    public int BookId { get; set; }

    public Books Book;

    private bool ShowFrontImage = true;

    protected async override Task OnInitializedAsync()
    {
        Book = Context.Books
            .Include(book => book.GenreId)
            .Include(book => book.LanguageId)
            .FirstOrDefault(book => book.BookId == BookId);
    }


    private string GetImageSource(byte[] imageData)
    {
        if (imageData == null || imageData.Length == 0)
            return null;

        return $"data:image/jpeg;base64,{Convert.ToBase64String(imageData)}";
    }

    private void ToggleImage()
    {
        ShowFrontImage = !ShowFrontImage;
    }
}
